
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


android {
    ///更新FlutterSDK版本后需要在这里指定命名空间
    namespace "com.cookbook.flutter.fluttercookbook"
//    compileSdkVersion flutter.compileSdkVersion
    compileSdkVersion 35
//    ndkVersion flutter.ndkVersion
    ///指定ndk版本，不然编译时与插件中用的ndk版本不同会导致编译错误
    ndkVersion = "27.0.12077973"

    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8

//        sourceCompatibility = JavaVersion.VERSION_11
//        targetCompatibility = JavaVersion.VERSION_11
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
//        jvmTarget = '1.8'
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.cookbook.flutter.fluttercookbook"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
//        minSdkVersion 26
//        anifest merger failed : uses-sdk:minSdkVersion 26 cannot be smaller than version 27 declared in library [:flutter_angle]
        //使用three_js包时需要最低版本27,主要是flutter_angl这个包对android的SDK版本有要求
        minSdkVersion 31
//        targetSdkVersion 31
//        minSdkVersion flutter.minSdkVersion
//        targetSdkVersion flutter.targetSdkVersion
//        compileSdkVersion 35
        targetSdkVersion  35

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}
///版本在settings.gradle中指定
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//}
