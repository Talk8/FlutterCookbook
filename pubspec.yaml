name: fluttercookbook
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ^3.8.1
#  sdk: ">=3.0.2 <4.0.0"
#  sdk: ">=2.17.6 <4.0.0"
#  sdk: ">=2.17.6 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  #talk8 add 添加国际化相关内容,添加完后IDE会在窗口上方自动弹出flutter命令，选择pub get就可以添加依赖
  #或者是在终端中执行flutter命令，命令内容？依赖主要更新了Dart_Packages.xml文件中的内容
  flutter_localizations:
    sdk: flutter
  intl: any

# flutter_intl借助这个包来生成文件
  intl_utils: ^2.8.7

#导入intl依赖，输入任何数字后IDE就会自动弹出当前最新的版本. 开始用0.19.0版本更新FlutterSDK后提高到0.20.0版本，否则有编译错误
  intl_translation: ^0.20.0


#导入包用来访问网络,开始使用最新版本无法导入，换成低版本后就可以了
  url_launcher: ^6.3.2
  #通常情况下，引入上一个包就可以包含下面这个包，但是有编译错误，因此单独指定下面包的版本
  url_launcher_android: ^6.3.17

#  url_launcher: ^6.1.11

#导入DIO包来访问网络
  dio: ^5.2.1
#导入shared_preferences包实现本地存储
  shared_preferences: ^2.5.3

#导入path_provider包实现文件存储
  path_provider: ^2.1.5

#导入provide实现数据共享
  provider: ^6.1.2

#导入font_awesome_flutter字体图标包
  font_awesome_flutter: ^10.5.0

#导入logger包用来向android一样打印log, 20240722查看时最新版本已经是2.4.一年前还是1.4.更新比较快。three_js需要2.3.0版本
#  logger: ^1.4.0
  logger: ^2.3.0
#导入permission包来使用权限申请
  permission_handler: ^11.3.1

#导入screenutil包来适配屏幕，更新版本以解决编译错误
  flutter_screenutil: ^5.9.3

#导入BLE包来使用蓝牙
  flutter_reactive_ble: ^5.4.0
#导入BLE包来使用蓝牙,这个包的版本更新太快了，几乎一天一更新
  flutter_blue_plus: any
#国内一家专门做ble IOT公司(TTCIOTSDK)提供的包,前面两个我都无法收到BLE回复的数据，这个包可以。
#这个包还使用device_info_plus和synchronized这两个包来获取设备信息和异步操作（用lock实现）
  flutter_ttc_ble: ^0.1.4
#ttc_ble的demo中使用了file_picker，所以导入这个包
  file_picker: ^10.1.2
#有时间了试试这个包1
#  flutter_esp_ble_prov: any
#导入image_picer用来使用相机和相册,IOS上需要使用pod install 命令安装相关的依赖，不然无法通过编译
# 执行命令时有警告，详细如下： CocoaPods did not set the base configuration of your project because your
# project already has a custom config set. In order for CocoaPods integration to work at all, please either set the base configurations of the target `Runner` to `Target Support Files/Pods-Runner/Pods-Runner.profile.xcconfig` or include the `Target Support Files/Pods-Runner/Pods-Runner.profile.xcconfig` in your build configuration (`Flutter/Release.xcconfig`).
#  去掉此警告需要在xcode中配置：project:Runner ->Inof ->Configuration把debug,release,profile三个扩展下的runner修改成None,然后再pod install就可以
  image_picker: ^1.2.0
# image_picker需要此包，用来播放视频文件
  video_player: ^2.9.5
# image_picker需要此包,用来处理媒体文件的类型
  mime: ^1.0.6
# 图片获取和Image_Picker类似，只不过界面是微信的界面,注意版本需要flutter_sdk支持20240130已经到8.8了。为了与flutter版本3.10.2匹配才用的8.6.3
  #这个包依赖了其它的包，比较多，比如video_player，extended_image: 好在都是他们自己组织做的包
  #注意：这个包需要高版本的sdk. The plugin photo_manager requires Android SDK version 34.
  wechat_assets_picker: ^9.8.0
# 通过相机获取图片和视频，Pick风格是wechat和 wechat_assets_picker一样都是国内人员开发的包
  #这个包依赖camera包，会自动把camera包添加到项目中来
  wechat_camera_picker: ^4.4.0
# 视频压缩包,用来处理视频文件的，它可以获取到视频文件的时长，路径，分辨率等类型
  video_compress: ^3.1.4
#Flutter官方提供的webview
  webview_flutter: ^4.13.0
  #三方提供的Webview，可以避开安全策略来加载本地的html文件
  flutter_inappwebview: ^6.0.0

# 三方图片库，用来显示PGM格式的图片文件,不过实践后无法解码，
#  注意：three_dart >=0.0.5 depends on image ^3.1.1 and fluttercookbook depends on image ^4.2.0,three_dart >=0.0.5 is forbidden.
  image: ^4.2.0
 # 显示三维图像,ditredi用的坐标会用到vector_math中的内容,它可以通过坐标显示图像，而且也支持3d格式文件显示图像，不过只支持obj格式
  ditredi: ^2.0.2
  vector_math: ^2.1.4
 # 可以直接把3d格式的文件渲染成图形，比如glf,glb,不过不支持Obj,它的核心是Google的ModelViewer(显示3d图形，只支持glb,glf,js语言实现）
  flutter_3d_controller: ^2.2.0
 #这个是20240722的2周前一个国外人新写的插件，用的人比较少
  three_js: ^0.0.7
  three_js_geometry: ^0.0.2
  three_js_helpers: ^0.0.5

#国内人开发的库，相当于把three移植到了flutter中，不过版本比较底先不引入，主要是依赖其它插件的版本有冲突
#  three_dart: ^0.0.16

#在组件旁边添加小红点
  badges: ^3.1.2
# 用来创建app介绍页面的包，不过get后发现它叫flutter_keyboard_visibility，难道是原来的名字，它还依赖dots_indicator这个包
  introduction_screen: ^3.1.17
# 使用这个包来创建摇杆,不过有错误，不再使用
#  control_pad_plus: ^0.1.0

# 创建panel的包，基于bottomsheet
  sliding_up_panel: ^2.0.0

#实现滑动菜单功能，使用场景少,3.0.0与flutter3.10.2版本匹配，3.1.0与flutter3.19.6匹配
  flutter_slidable: ^4.0.0

#获取GPS信息，非常好用的GPS包
  geolocator: ^14.0.1

#实现NumberPicker
  numberpicker: ^2.1.2

#实现NumberPicker
  wheel_chooser: ^1.1.2

#实现垂直switcher，不过效果不理想,不推荐使用
  slide_switcher: ^1.1.2

#可以自定义宽度和高度，替换开，关，thumb图标，缺点是无法滑动thumb
  flutter_advanced_switch: ^3.0.1

#和advanced_switch功能差不多，不过不需要controller，缺点是无法滑动thumb
  flutter_switch: ^0.3.2

#还有一个 day_night_switcher:,估计是从在这个包的基础上创建的，不过却比这个包评价高。
  day_night_switch: ^1.0.4

# 这个包可以获取到手机上的屏幕尺寸，android版本等有用信息
  device_info_plus: ^10.1.0

# 新版本需要flutter版本支持：
  # Because fluttercookbook depends on package_info_plus >=5.0.1 which requires SDK version ^3.2.0, version solving failed.
  # Process finished with exit code 1
  package_info_plus: ^8.3.0

#打开系统中的一些设置开关，比如蓝牙WIFI等,这个插件很长时间不更新了，用open_setting_plus来代替它
#  open_settings: ^2.0.2
  open_settings_plus: ^0.4.0

#这个包2year没有更新了，项目中不再使用此包，可以使用bluetooth_enable_plus来代替它
#  bluetooth_enable_fork: ^0.1.6
# 可以进行状态管理，显示dialog,snackBar不需要context,开始用4.6.5版本更新FlutterSDK后提高到4.6.6版本，否则有编译错误
  get: ^4.7.2
# 本地存储
  get_storage: ^2.1.1

#3.0.0版本无法通过编译，要求dart3.0版本,我的3.0.2版本，但是却编译不过
  #用来把太长的文本折叠的扩展显示，用处不太，3.0版本可以显示#@等特殊内容，但是我的环境编译不过
  readmore: ^2.2.0
#用来解析html中的各各种元素，或者从中提取出某一部分元素，比如body.
  html: ^0.15.4

  #用来渲染html的文本，图片，声音等内容，这个包导入了太多的其它包，使用时估计会导致运行包太大，比如rxDart,image等，详细可以看0235的提交记录。
#  flutter_widget_from_html: ^0.14.11
  flutter_widget_from_html: ^0.17.0

#获取当前时区的包
  flutter_timezone: ^4.1.1
#可以获取所有时区，但是无法获取当前时区，可以把时间转换成不同时区下的时间
  timezone: ^0.9.2

# 监听页面的生命周期
  lifecycle: ^0.9.0


#用来显示首次使用引导功能，和onboarding_overlay功能类似
  overlay_tooltip: ^0.2.4


#用来显示首次使用引导功能
  onboarding_overlay: ^3.2.2

#  显示像聊天窗口一样的窗口,国人写的
#  bubble_box: ^0.5.3

#  显示像聊天窗口一样的窗口,比bubble_box受欢迎一些
#  flutter_chat_bubble: ^2.0.2
#  这个也是显示聊天窗口，不过有3年没有更新了，比较老,但是功能十分强大，推荐使用
#  bubble: ^1.2.1

#最新版本为1.6.0基于intl0.19.0,为了当前环境中的intl匹配修改成1.5.0版本
#这个插件主打聊天特色功能，可以封装audio,image等内容
#  chat_bubbles: ^1.7.0

#  audio_session: ^0.2.2
#实现振动功能的包
  vibration: ^3.1.3

# 使用riverpod进行状态管理,这里安装两个插件在dev_dependance中还有4个依赖
# 安装这个版本的riverpod需要flutter高版本才可以，我的是3.19,不然会有各种包的版本冲突
  flutter_riverpod: ^2.6.1
  riverpod_annotation: ^2.6.1

#显示手机当前的最量(实时显示)
  realtime_battery_indicator: ^1.0.2

# 这个插件需要Flutter3.27以上版本，不然有编译错误
#  cupertino_battery_indicator: ^1.2.1

#  冒泡动画，和我做的效果一样
#  floating_bubbles: ^2.6.2

  #显示动画图标
#  flutter_animated_icons: ^1.0.1
# 用来创建splash页面
  flutter_native_splash: ^2.3.7
# 用来实现本地消息推送功能，参考官方的readMe来配置
#添加通知功能，参考包官方的readme来添加,不要升级到0.10.0版本以及后续版本，除非flutter官方的AGP版本升级到了8.0及以及版本
#因为Gradle8.0版本进行了重大的升级，很多包不支持. 在使用awesome_notifications插件时发现AGP在8.0进行重大的升级，去掉了
# transform相关的内容，因此在使用Flutter的三方插件时需要关注插件是否需要gradle8.0支持，如果需要就降低插件版本到不需要8.0支持
#的版本。因为很多插件不支持Gradle8.0，除非等到Flutter官方SDK支持8.0后再升级. 我在setting.gradle和gradle-wrapper.properties
#文件都写了AGP和gradle的版本，在新建项目中没有其它插件只使用awesome_notifications插件0.10.0版本时可以正常编译和运行。
#后续如果项目整体升级AGP版本到8.0以上时可以参考这两个版本号（当前没有使用注释掉了）。

#  awesome_notifications_core: ^0.10.1
#  awesome_notifications: ^0.10.1

# 用来实现远程消息推送功能，参考官方的readMe来配置
#  awesome_notifications_fcm: ^0.10.0
#  firebase_messaging: 上面的插件可以替换本插件
#  firebase_core: ^

#不建议在这里配置，使用flutter_native_splash.yaml文件单独进行配置
#flutter_native_splash:
#  color: "#42a5f5"
#  #图片格式必须是png
#  image: images/ex.png
#
#  android12:
##    color: "#42a5f5"
#    color: "#FFa5f5"
#    #图片格式必须是png
#    image: "images/avata.png"

#在dependencies下配置没有效果，需要在dev_dependencies下配置才有效果
#  flutter_launcher_icons: ^0.13.1
#flutter_launcher_icons:
#  android: true
#  ios: true
#  image_path_android: "images/avata.png"
#  image_path_ios: "images/avata.png"


  #试试这个包
#  dynamic_themes: ^1.1.0


  #试试这个包
  #easy_date_timeline: ^1.0.6

  #试试这个包
#  flutter_picker: ^2.1.0

  #试试这个包
#  bottom_picker: ^2.1.0

  #试试这个包
#  selector_wheel: ^1.1.2
#  wheel_slider:
#实现各种图形，类似Echart
#  fl_chart: ^0.63.0
#dart官方提供的包，像c中的chara一样操作string.还没有使用
#  characters: ^1.3.0
  #用来生成MD5,SHA加密算法，还没有使用
#  crypto: ^3.0.3
  #用来登录google账号,还没有使用
#  google_sign_in:
  #实现通知功能，还没有使用
#  flutter_local_notifications:

#实现banner效果，还没有使用
#  carousel_slider:

# 实现sqlLite相关功能,项目中没有用这个包，加上是为了解决编译错误
  sqflite: ^2.4.2
# 项目中没有用这个包，加上是为了解决编译IOS版本时的错误
  wakelock_plus: ^1.3.2
# 实现IOS中类似setting中的各种组菜单，比较简洁和好看
  pull_down_button: ^0.10.2

  #实现自动调整文字大小的组件，相当于Text的扩展。
#  auto_size_text:
  # 实现文字动画
#  animated_text_kit:
  #实现各种形状的进度条
#  percent_indicator:
  #实现各种样式的进度，比如旋转，转动
#  flutter_spinkit:
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

#更新FlutterSDK到3.24.2后有编译错误，因此强制加上这两个包，不知道是哪个插件引用了它们
#  win32: ^5.5.4
#  win32_registry: ^1.1.4

#把包中版本冲突：because fluttercookbook depends on both flutter_riverpod ^2.5.1 and flutter_test from sdk, version solving failed.
#可以使用以下方法解决
#dependency_overrides:
#  collection: ^1.17.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  #从2.0.0升级到6.0.0
  flutter_lints: ^6.0.0

##这4个包是配合riverpod使用的，前两个没有指定版本
  build_runner:
  custom_lint:
  riverpod_generator: ^2.4.0
  riverpod_lint: ^2.3.10

   #这个是三方插件，它必须配置在 dev_dependencies:下方， 在它下面的其它插件是官方的配置：
  flutter_launcher_icons: ^0.13.1
flutter_launcher_icons:
    android: true
    ios: true
    image_path: "images/avata.png"
  #  image_path_android: "images/avata.png"
  #  image_path_ios: "images/avata.png"


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  generate: true # Add this line

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  assets:
    #使用images加反斜线可以包含目录下所有图片，不需要单独添加每个图片
    - images/
    - images/ex.png
    - images/panda.jpeg
    - images/indexdev.html
    - images/ex_02pool.obj
    - images/ex_01map.pgm

  fonts:
    - family: IconMoon
      fonts:
        - asset: fonts/IcoMoonFree.ttf
    - family: FlutterIconCom
      fonts:
        - asset: fonts/FlutterIconCom.ttf

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

  ##########
  # 20250608 0263的修改比较大，主要更新了FlutterSDK和AST，都当前日期下最新的版本，因此yal中各个插件的版本也做了更新
  # 此外，在android目录下的gradle配置，AGP版本都做了相应的更新。最大小的更新就是使用了新的namespace来定义包名，
  # 而不是像以前一样在Manifest文件中修改包名
  ##########
